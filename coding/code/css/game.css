.game_app {overflow: hidden; position: relative; min-width: 1280px; height: 100vh;}
.game_app .game {position: absolute; left: 0; bottom: 0; z-index: 10; width: 70000px; height: 70000px; background-image: url('../../../lib/images/background.png'); background-repeat: repeat; background-size: auto auto; will-change: transform;}

/* keyframes : 애니메이션 구간을 정하고 어떤 스타일을 적용시킬지 정하는 문법 (name, 구간,스타일로 구성) */
@keyframes tank_basic {
	from {background-position-x: 0px;}
	to {background-position-x: -1900px;}
}
@keyframes tank_move {
	from {background-position-x: 0px;}
	to {background-position-x: -1900px;}
}
@keyframes tank_attack {
	from {background-position-x: 0px;}
	to {background-position-x: -1900px;}
}

.tank_box {position: fixed; left:0; bottom: 0; z-index:100; width: 190px; height: 191px; will-change: transform;}
.tank_box .tank {height: 100%; background-image: url('../../../lib/images/tank_basic.png'); background-size: 1900px 191px; animation: tank_basic 0.7s infinite steps(10);}
/* animation 에 keyframes name을 불러와 적용 (0.7s 동안 keyframes의 범위를 10번으로 나눠 이동)  */

.tank_box .tank.rotate {transform: rotate(0deg);}

.tank_box .tank.move, .tank_box .tank.move.attack {height: 100%; background-image: url('../../../lib/images/tank_move.png'); background-size: 1900px 191px; animation: tank_move 0.7s infinite steps(10);}
/* attak모션이 한번만 발생할 수 있도록 우선순위 조정 */
.tank_box .tank.attack {height: 100%; background-image: url('../../../lib/images/tank_attack.png'); background-size: 1900px 191px; animation: tank_attack 0.1s 1 steps(10);}
/* class를 명시해두고 js파일에서 element.add / remove를 통해 컨트롤 하는듯 */

.tank_bullet {position: absolute; left: 0; bottom: 0; z-index: 90; width: 30px; height: 50px; background-image: url('../../../lib/images/normal_bullet.png'); background-size: cover; background-repeat: no-repeat; will-change: transform;}